name: Release

on: 
  release:
    types: [published, created, edited]
    branches-ignore:
      - '/.*/'
    tags:        
      - /^v\d+[.]\d+[.]\d+$/
jobs:

  unit_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: NPM Rebuild
      run: npm install --quiet
    - name: NPM Build
      run: npm run build
    - name: Run unit tests.
      run: npm run ci:test
  
  node8-latest:
    runs-on: ubuntu-latest
    container:
      image: node:8
    steps:
    - uses: actions/checkout@v1
    - name: NPM Rebuild
      run: npm install --quiet
    - name: NPM Build
      run: npm run build
    - name: Run unit tests.
      run: npm run ci:coverage
    - name: Submit coverage data to codecov.
      run: |
        if [[ -z $CIRCLE_PULL_REQUEST ]]; then
          bash < (curl -s https://codecov.io/bash )
        fi
      if: success()
  
  
  node10-latest:
    runs-on: ubuntu-latest
    container:
      image: node:10
    needs: [unit_tests]
    steps:
    - uses: actions/checkout@v1
    - name: Run Tests on Node 10 
      run: echo Hello, world!
  
  draft:
    runs-on: ubuntu-latest
    needs: [node8-latest, node10-latest]
    container:
      image: node:latest
    steps:
    - name: NPM Rebuild
      run: npm install --quiet
    - name: Validate Commit Messages
      run: npm run release:validate
    - name: Draft Releases to Github
      run: npm run ci:release
    
  check_github_releases:
    runs-on: ubuntu-latest
    needs: [draft]
    steps:
    - name: Checking Github Releases ...
  
  publish:
    runs-on: ubuntu-latest
    needs: [check_github_releases]
    container:
      image: node:latest
    steps:
    - name: set npm TOKEN
      run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
    - name: NPM Rebuild
      run: npm install --quiet
    - name: Publish to NPM
      run: npm publish --verbose
